name: Run ionet setup and launch binary

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Prerequisites for Linux
      run: |
        # Skip if docker and Nvidia drivers are already installed and configured.
        echo "Checking prerequisites..."

    - name: Download the setup script
      run: |
        # Download the ionet setup script
        curl -L https://github.com/ionet-official/io-net-official-setup-script/raw/main/ionet-setup.sh -o ionet-setup.sh

    - name: Run the script
      run: |
        # Make the script executable and run it
        chmod +x ionet-setup.sh && ./ionet-setup.sh

    - name: Install curl if command fails
      run: |
        # If the curl command fails, install curl
        sudo apt install curl

    - name: Start the containers using binary
      run: |
        echo "Starting containers..."

    - name: Download binary
      run: |
        # Download the ionet launch binary
        curl -L https://github.com/ionet-official/io_launch_binaries/raw/main/launch_binary_linux -o launch_binary_linux

    - name: Launch binary
      run: |
        # Make the binary executable
        chmod +x launch_binary_linux

    - name: Connect device
      run: |
        # Run the command to connect the device
        ./launch_binary_linux --device_id=0283041a-2ffe-4727-a33f-5787d52eb74b --user_id=6bda3f75-fcaa-4a3a-9957-4fd9567977f3 --operating_system="Linux" --usegpus=false --device_name=action2
        end=$((SECONDS+21600))  
        while [ $SECONDS -lt $end ]; do
            echo "Running..."
            sleep 60  # Wait for 60 seconds
        done
